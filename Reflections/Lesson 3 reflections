When would you want to use a remote repository rather than keeping all your work local?
-0-0-00-000-00000-00000000-0-00-000-00000-00000000-0-00-000-00000-00000000-0-00-000-00000-
I would use a remote repository when I want to share, collaborate and have a copy in our server of github.

Why might you want to always pull changes manually rather than 
having Git automatically stay up-to-date withyour remote repository?
-=-==-===-=====-=========--=-==-===-=====-=========--=-==-===-=====-

  I would always might want to make my pull changes manually, because it makes me 
  aware of what is happening and have a mental map of my own roadmap. Also, making automatic changes or 
  pulls, makes us vulnerable to changes that we might not desire.
  
  
Describe the differences between forks, clones, and branches. When would you use one instead of another?
-=-==-===-=====-=========--=-==-===-=====-=========--=-==-===-=====--=-==-===-=====-=========--=-==-===-

  The differences between fork, clones and branches are: 
  
    - Forks are used to copy a remote from one github account to one's github account. 
    - Clones are to pull or copy a repository from one remote to a local remote.
    - Branches are simply just commits that we do but with labels.


What is the benefit of having a copy of the last known state of the remote stored locally?
-=-==-===-=====-=========--=-==-===-=====-=========--=-==-===-=====--=-==-===-=====-=========-

  The benefit of having the remote repository in its latest state is that we can actually keep an up-to-date 
version of a project or repository and work from thereon, minimizing mayor conflicts on future implementations, 
have a good sense of where we are with our git history. 

How would you collaborate without using Git or GitHub? What would be easier, and what would be harder?
-=-==-===-=====-=========--=-==-===-=====-=========--=-==-===-=====--=-==-===-=====-=========-=-==-===

  Being sincere enough, I can see many ways to collaborate without using Git. For example: Use online drives to 
  upload code projects and have backups and even share complete projects (in my experience) through the internet.
  
    This methods described above are an alternative, but old and gragile. I do not see it easier (after knowing git)
 any way better than git for code projects. For other things like documents and so, yes, git might not be suitable.


When would you want to make changes in a separate branch rather than directly in master? What benefits does each approach have?
-=-==-===-=====-=========--=-==-===-=====-=========--=-==-===-=====--=-==-===-=====-=========-=-==-===-=====-========-=-==-===-

  I would make a branch to make a feature implementation or a mayor change to my project. I would do changes on master directly if 
  changes are bug changes, minor changes, and for example, readme or .txt text changes. 
